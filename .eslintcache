[{"C:\\Users\\cicero\\Documents\\cici\\src\\index.js":"1","C:\\Users\\cicero\\Documents\\cici\\src\\reportWebVitals.js":"2","C:\\Users\\cicero\\Documents\\cici\\src\\App.js":"3"},{"size":500,"mtime":499162500000,"results":"4","hashOfConfig":"5"},{"size":362,"mtime":499162500000,"results":"6","hashOfConfig":"5"},{"size":1443,"mtime":1610481051805,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"19nu9x7",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},"C:\\Users\\cicero\\Documents\\cici\\src\\index.js",[],["16","17"],"C:\\Users\\cicero\\Documents\\cici\\src\\reportWebVitals.js",[],"C:\\Users\\cicero\\Documents\\cici\\src\\App.js",["18","19","20","21"],"import React, {Component} from 'react';\r\nimport './style.css'\r\n\r\n// Importando a imagem do cronometro\r\nimport cronometro from './assets/cronometro.png'; \r\n\r\nclass App extends Component{\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      numero: 0,\r\n      botao: 'VAI'\r\n    };\r\n    this.timer = null;\r\n    this.vai = this.vai.bind(this);\r\n    this.limpar = this.limpar.bind(this);\r\n  }\r\n\r\n  vai(){\r\n    let state = this.state;\r\n\r\n    if(this.timer !== null){\r\n      clearInterval(this.timer);\r\n      this.timer = null;\r\n      state.botao = 'VAI';\r\n    }else{\r\n      this.timer = setInterval(()=>{\r\n        let state = this.state;\r\n        state.numero += 0.1;\r\n        this.setState(state);\r\n      },100);\r\n      state.botao = 'PAUSAR';\r\n    }\r\n\r\n    this.setState(state);\r\n  }\r\n\r\n  limpar(){\r\n    if(this.timer !== null){\r\n      clearInterval(this.timer);\r\n      this.timer = null;\r\n    }\r\n\r\n    let state = this.state;\r\n    state.numero = 0;\r\n    state.botao = 'VAI';\r\n    this.setState(state);\r\n\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <div className=\"container\">\r\n        <img src={cronometro} className=\"img\" />\r\n        <a className=\"timer\">{this.state.numero.toFixed(1)}</a>\r\n        <div className=\"areaBtn\">\r\n          <a className=\"botao\" onClick={this.vai}>{this.state.botao}</a>\r\n          <a className=\"botao\" onClick={this.limpar}>LIMPAR</a>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;",{"ruleId":"22","replacedBy":"23"},{"ruleId":"24","replacedBy":"25"},{"ruleId":"26","severity":1,"message":"27","line":55,"column":9,"nodeType":"28","endLine":55,"endColumn":49},{"ruleId":"29","severity":1,"message":"30","line":56,"column":9,"nodeType":"28","endLine":56,"endColumn":30},{"ruleId":"29","severity":1,"message":"30","line":58,"column":11,"nodeType":"28","endLine":58,"endColumn":51},{"ruleId":"29","severity":1,"message":"30","line":59,"column":11,"nodeType":"28","endLine":59,"endColumn":54},"no-native-reassign",["31"],"no-negated-in-lhs",["32"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]